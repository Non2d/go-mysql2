version: "3.8"
services: #コンテナに対応
    nginx:
        image: nginx:latest
        container_name: nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx:/etc/nginx/conf.d
            - /etc/letsencrypt/live/vps4.nkmr.io/fullchain.pem:/etc/nginx/cert.crt
            - /etc/letsencrypt/live/vps4.nkmr.io/privkey.pem:/etc/nginx/cert.key
        depends_on:
            - react
            - go
        networks:
            - golang_test_network
    
    react:
        container_name: react
        build:
            context: ./client #Dockerfileのあるディレクトリを指定
            dockerfile: Dockerfile.prod #Dockerfileのファイル名を指定
        tty: true
        # ports:
        #     - "3000:3000" #"7000:80"
        networks: #コンテナ間の通信ができるようにする．
            - golang_test_network

    go:
        container_name: go
        build:
            context: ./golang
            dockerfile: Dockerfile.prod
        tty: true
        ports:
            - "8080:8080" #ホスト側のポート:コンテナ側のポート
        env_file:
            - ./mysql/.env
        depends_on: #コンテナの起動順序を指定．
            - db
        volumes: #コンテナの外部に保管し．データを永続化する．
            - ./golang/app:/go/src/app
        networks: #コンテナ間の通信ができるようにする．
            - golang_test_network

    db:
        container_name: db
        build:
            context: ./mysql
            dockerfile: Dockerfile.prod
        tty: true
        platform: linux/x86_64
        ports:
            - 3307:3306 #ホスト側のポート:コンテナ側のポート
        env_file:
            - ./mysql/.env
        volumes:
            - mysql_test_volume:/var/lib/mysql
        networks:
            - golang_test_network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        platform: linux/x86_64
        container_name: phpmyadmin
        ports:
            - "9000:80"
        env_file:
            - ./mysql/.env
        environment:
            PMA_HOST: db
        depends_on:
            - db
        networks:
            - golang_test_network

volumes:
    mysql_test_volume:
        name: mysql_test_volume

networks:
    golang_test_network:
        external: true